{"version":3,"sources":["components/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css"],"names":["Section","title","children","Statistics","props","className","styles","statisticsItem","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","setState","previousCounter","this","objKey","Object","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oQAWeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCaQC,EAfI,SAACC,GAClB,OACE,eAAC,EAAD,WACE,oBAAIC,UAAWC,IAAOL,MAAtB,wBACA,oBAAGI,UAAWC,IAAOC,eAArB,mBAA4CH,EAAMI,QAClD,oBAAGH,UAAWC,IAAOC,eAArB,sBAA+CH,EAAMK,WACrD,oBAAGJ,UAAWC,IAAOC,eAArB,kBAA2CH,EAAMM,OACjD,oBAAGL,UAAWC,IAAOC,eAArB,oBAA6CH,EAAMO,SACnD,oBAAGN,UAAWC,IAAOC,eAArB,gCACsBH,EAAMQ,mBAD5B,WCQSC,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACGa,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASL,EAJX,SAMGE,GALIA,SCEAI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,8BACE,4BAAIA,OCsDKC,E,4MApDbC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPe,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAEpC,OAHyB,EACjBhB,KADiB,EACXC,QADW,EACFC,K,EAKzBgB,gCAAkC,WAChC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKJ,MAAdhB,KAC0BmB,EAClC,OAAOE,KAAKC,MAAMF,I,EAGpBb,gBAAkB,SAACgB,GACjB,IAAMZ,EAAOY,EAAEC,OAAOb,KACtB,EAAKc,UAAS,SAACC,GAAD,sBAAyBf,EAAOe,EAAgBf,GAAQ,O,uDAG9D,IAAD,EACwBgB,KAAKX,MAA5BhB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQwB,KAAKV,qBACbb,EAAqBuB,KAAKT,kCAC1BU,EAASC,OAAOC,KAAKH,KAAKX,OAEhC,OACE,gCACE,cAAC,EAAD,CACEV,QAASsB,EACTrB,gBAAiBoB,KAAKpB,kBAEb,IAAVJ,EACC,cAAC,EAAD,CAAcW,QAAQ,sBAEtB,cAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,W,GA7Cd2B,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,eAAiB,sC","file":"static/js/main.ee9a7ad3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport Section from \"../Section\";\r\n\r\nconst Statistics = (props) => {\r\n  return (\r\n    <Section>\r\n      <h2 className={styles.title}>Statistics</h2>\r\n      <p className={styles.statisticsItem}>Good: {props.good}</p>\r\n      <p className={styles.statisticsItem}>Neutral: {props.neutral}</p>\r\n      <p className={styles.statisticsItem}>Bad: {props.bad}</p>\r\n      <p className={styles.statisticsItem}>Total: {props.total}</p>\r\n      <p className={styles.statisticsItem}>\r\n        Positive feedback: {props.positivePercentage}%\r\n      </p>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport Section from \"../Section.jsx\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <Section title=\"Please leave feedback\">\r\n      {options.map((option) => (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Statistics from \"./components/Statistics/Statistics.jsx\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions.jsx\";\nimport Notification from \"./components/Notification/Notification.jsx\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  onLeaveFeedback = (e) => {\n    const name = e.target.name;\n    this.setState((previousCounter) => ({ [name]: previousCounter[name] + 1 }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const objKey = Object.keys(this.state);\n\n    return (\n      <div>\n        <FeedbackOptions\n          options={objKey}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2V5v9\",\"statisticsItem\":\"Statistics_statisticsItem__234eD\"};"],"sourceRoot":""}